<!DOCTYPE html>
<html>
<head>
	<title>Sauvez une biche !</title>
	<meta charset="utf-8" />
	<link rel="icon" href="favicon.ico" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.3/leaflet.css" />
    <script src="//cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.3/leaflet.js"></script>

    <script src='//api.tiles.mapbox.com/mapbox.js/plugins/leaflet-hash/v0.2.1/leaflet-hash.js'></script>

    <link rel="stylesheet" href="css/leaflet.modal.min.css" />
    <script type="text/javascript" src="js/Leaflet.Modal.min.js"></script>
    
<!-- Include the loading control -->
    <link rel="stylesheet" href="css/Control.Loading.css" />
    <script src="js/Control.Loading.js"></script>
    
    <script src="js/leaflet.geometryutil.js"></script>
    

    <style>
		body {
			padding: 0;
			margin: 0;
		}
		html, body, #map {
			height: 100%;
		}
    </style>


</head>
<body>

    <div id="map"></div>

    <script>

        var informationControl = L.Control.extend({
            options: {
                position: 'topright' 
                //control position - allowed: 'topleft', 'topright', 'bottomleft', 'bottomright'
            },
            onAdd: function (map) {
                var container = L.DomUtil.create('div', 'leaflet-bar leaflet-control leaflet-control-custom');
                
                container.style.backgroundColor = 'white';
                container.style.backgroundImage = "url(images/information.png)";
                container.style.backgroundSize = "30px 30px";
                container.style.width = '30px';
                container.style.height = '30px';
                
                container.onclick = function(e) {

                    console.log('buttonClicked');
                    console.log(e);
                    console.log(map);
                    map.fire('modal', {
                        content: '                                              \
<h1>Sauvez une biche...</h1>                                                    \
                                                                                \
<img src="images/panneauxbiche_200px.png" alt="Panneau Biche"                   \
style="float:right"/>                                                           \
                                                                                \
<p>Display wild animal signs from OpenStreetMap, starting by hind, bat and toad.\
Check <a href="http://panneauxbiche.com">http://panneauxbiche.com</a> for the   \
real-time generated map from OpenStreetMap.</p>                                 \
                                                                                \
<p>This project started (as a joke) in may 2015 at SoTM-fr in Brest and the goal\
is to display all A15b road signs. <i>Cf.</i>                                   \
<a href="https://fr.wikipedia.org/wiki/Panneau_signalant_le_passage_d%27animaux_sauvages_en_France">Wikipedia.org \
- Panneau signalant le passage d&quote;animaux sauvages en France</a></p>       \
                                                                                \
<p>Check out our Twitter feed for hot news:                                     \
<a href="https://twitter.com/panneauxbiche">Twitter.com - panneauxbiche</a></p> \
                                                                                \
<p>If you&quote;d like to map the sign in OSM, please use hazard=animal_crossing.   \
You can also specify the animal species with species=* <i>cf.</i>               \
<a href="http://wiki.openstreetmap.org/wiki/Key:species">Wiki OpenStreetMap.org \
- Key:species</a></p>                                                           \
                                                                                \
<p>I suggest you also use man_made=sign but the tags are still under discussion \
<i>cf.</i>                                                                      \
<a href="http://wiki.openstreetmap.org/wiki/Proposed_features/hazard#Animal_crossign">Wiki \
OpenStreetMap.org - Proposed features/hazard#Animal_crossign</a></p>            \
'
                    });
                };

                return container;
            }
        });    
        
        
    
    
        var userLocation;   // localisation du navigateur
        var title = null;
        
        function getIconFrom(tags) {
            var url = null;
            switch (tags.hazard) {
                case "children": url = "A13a.png"; break;
                case "wild_animals":
                case "animals_crossing":
                case "deer":
                case "animal_crossing": url = "A15b.png"; break;
                case "moose": url = "moose.png"; break;
                case "cyclists": url = "A21.png"; break;
                case "horses": url = "A15c.png"; break;
                case "pedestrians": url = "A13b.png"; break;
                case "shark": url = "shark.png"; break;
                case "crocodile": url = "crocodile.png"; break;
                default : url = "A14.png";
            }
            return url;
        }

        function askForPlots() {
            map.fireEvent('dataloading'); 
            var zoom = map.getZoom();
            var bounds = map.getBounds();
            var minll = bounds.getSouthWest();
            var maxll = bounds.getNorthEast();
            var bbox = minll.lat + ',' + minll.lng + ',' + maxll.lat + ',' + maxll.lng;
/// @see http://taginfo.openstreetmap.org/keys/?key=hazard#values
            var selection = [
                '["hazard"="children"]',            // enfants
                '["hazard"="wild_animals"]',        // animaux sauvages
                '["hazard"="moose"]',               // rênes
                '["hazard"="animal_crossing"]',     // traversée d'animaux
                '["hazard"="cyclists"]',            // cyclistes
                '["hazard"="pedestrians"]',         // piétons
                '["hazard"="deer"]',                // Cerf / biche
                '["hazard"="animals_crossing"]',    // traversée d'animaux (pluriel)
                '["hazard"="shark"]',               // requin
                '["crocodile"="yes"]'               // crocodile
            ];
            
            var url = "http://overpass-api.de/api/interpreter?data=[out:json][timeout:120];(";
            selection.forEach( function(val, key){
                url += "node" + val + "(" + bbox + ");";
                url += "way" + val + "(" + bbox + ");";
            });
            url += ");out body;>;out skel qt;";
                   
            $.getJSON(url,
                function(feature){

                    if (feature == null) {   // surement une erreur
                        map.fireEvent('dataload'); 
                        return;
                    }

                    var nodes = [];
                    var ways = [];
                    var layers = [];
                    var popup = function(event) { 
                        console.log(event, this);
                        var t = (this.type == "node" ? "Node" : "Way") + " with tags : <ul>";
                        for(var key in this.tags) {
                            if (this.tags.hasOwnProperty(key)) {
                                t += "<li>" + key + " = '" + this.tags[key] + "'</li>";
                            }
                        };
                        t += "</ul>";
                        map.openPopup(t, event.latlng);
                    };

                    feature.elements.forEach(function( elem ) {
                        switch (elem.type) {
                            case 'node':
                                nodes[elem.id] = L.latLng(elem.lat, elem.lon);
                                if ('tags' in elem) {
                                    layers.push(L.marker(L.latLng(elem.lat, elem.lon), {
                                        icon: L.icon({
                                            iconUrl: 'images/' + getIconFrom(elem.tags),
                                            iconSize: [30, 27]
                                        })
                                    }).on('click', popup, {type: 'node', tags: elem.tags}
                                    ));
                                }
                                break;
                            case 'way':
                                if ('tags' in elem) ways.push(elem);
                                break;
                            default:
                                console.log('type error');
                        }
                    });
                    ways.forEach(function( way ) {
                        var latlngs = [];
                        way.nodes.forEach(function( nodeId ) {
                            latlngs.push(nodes[nodeId]);
                        });
                        
                        var ll = L.GeometryUtil.interpolateOnLine(map, latlngs, 0.5).latLng;
                        
                        layers.push(L.polyline(latlngs, {
                            color: 'red',
                            smoothFactor: 2
                        }).on('click', popup, {type: 'way', tags: way.tags}
                        ));
                        
                        layers.push(L.marker(L.latLng(ll.lat, ll.lng), {
                            icon: L.icon({
                                iconUrl: 'images/' + getIconFrom(way.tags),
                                iconSize: [30, 27]
                            })
                        }).on('click', popup, {type: 'way', tags: way.tags}
                        ));
                    });
                    map.removeLayer(animalsLayer);
		            animalsLayer = L.featureGroup(layers).addTo(map);
/*
                    animalsLayer.on('click', function(e){
                        console.log(e);
                    });
*/                
                    map.fireEvent('dataload'); 
            });
        };

/*
   		var mapboxLayer = L.tileLayer('//{s}.tiles.mapbox.com/v3/{id}/{z}/{x}/{y}.png', {
			maxZoom: 18,
			attribution: 'Imagery © <a href="http://mapbox.com">Mapbox</a>',
			id: 'examples.map-i875mjb7'
		});
*/

   		var mapquestLayer = L.tileLayer('//otile{s}.mqcdn.com/tiles/1.0.0/osm/{z}/{x}/{y}.png', {
			maxZoom: 18,
			attribution: 'Données &copy; Les contributeurs d\'<a href="http://openstreetmap.org">OpenStreetMap</a>, ' +
				         '<a href="http://opendatacommons.org/licenses/odbl/1-0/">ODbL 1.0</a>, ' +
                         'Extraction avec <a href="http://overpass-api.de/">Overpass (de)</a>, ' +
                         'Tiles Courtesy of <a href="http://www.mapquest.com/" target="_blank">MapQuest</a> <img src="http://developer.mapquest.com/content/osm/mq_logo.png">',
            subdomains: '1234'				
		});

   		var animalsLayer = L.featureGroup();   // vide
   		

        var map;
        var hash;
        
        window.addEventListener('DOMContentLoaded', function(e) {
            map = L.map('map', {
                layers: [mapquestLayer, animalsLayer],
                center: [45, 2],
                zoom: 6,
                loadingControl: true
            });

            map.addControl(new informationControl());

            hash = L.hash(map);

            map.on('moveend', function(e) {
                askForPlots();
            });
    
            map.on('locationfound', function(e){
                userLocation = e;
    			var radius = e.accuracy / 2;
    //			L.marker(e.latlng).addTo(map)
    //				.bindPopup("Vous êtes dans un rayon de " + radius + " m.").openPopup();
    			L.circle(e.latlng, radius).addTo(map);
            });
    
            map.locate({
                watch: true                // follow location
//                enableHighAccuracy: true    // using GPS
            });

            askForPlots();
        
        });



/*
Passer à photon.komoot.de avec autocomplétion

        new L.Control.OSMGeocoder({    // https://github.com/k4r573n/leaflet-control-osm-geocoder
        position: 'topleft',
        text: 'Centrer',
        email: 'panneauxbiche.com'
        }).addTo(map);
*/




    </script>

    <script src="http://code.jquery.com/jquery-2.1.4.min.js"></script>
    <!-- script src="./jquery/jquery.csv-0.71.min.js"></script -->
</body>
</html>
